/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"

Screen1ViewBase::Screen1ViewBase()
{
    box1.setPosition(0, 0, 320, 240);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    image1.setXY(11, 240);
    image1.setBitmap(Bitmap(BITMAP_AI1_ID));

    flexButton1.setBoxWithBorderPosition(0, 0, 291, 123);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    flexButton1.setPosition(0, 5, 291, 123);
    flexButton1.setAlpha(0);

    box2.setPosition(0, 0, 50, 50);
    box2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    box3.setPosition(0, 0, 50, 50);
    box3.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    box4.setPosition(15, 180, 50, 50);
    box4.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));

    box4_1.setPosition(98, 180, 50, 50);
    box4_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 255, 0));

    box4_1_1.setPosition(175, 180, 50, 50);
    box4_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 255));

    box4_1_1_1.setPosition(256, 180, 50, 50);
    box4_1_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    add(box1);
    add(image1);
    add(flexButton1);
    add(box2);
    add(box3);
    add(box4);
    add(box4_1);
    add(box4_1_1);
    add(box4_1_1_1);
}

void Screen1ViewBase::setupScreen()
{

}

//Handles when a key is pressed
void Screen1ViewBase::handleKeyEvent(uint8_t key)
{
    if(1 == key)
    {
        //Interaction2
        //When hardware button 1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenSlideTransitionEast();
    }
}

//Called when the screen is done with transition/load
void Screen1ViewBase::afterTransition()
{
    //Interaction1
    //When screen is entered move image1
    //Move image1 to x:11, y:57 with LinearIn easing in 500 ms (30 Ticks)
    image1.clearMoveAnimationEndedAction();
    image1.startMoveAnimation(11, 57, 30, EasingEquations::linearEaseIn, EasingEquations::linearEaseIn);
}
